Python objects
-------------


Number
-------
Number can be integer or decimal or hexa or octal.


String
------
String is defined in single or double or triple quotes.

Aname = 'python programming'
Bname = "java programming"
Cname = """unix shell scripting"""



List
-----
List is defined in [].
List contains set of elements.
Elements can be numbers or strings or Any combination.

Alist = [10,20,30,40]
Blist = ["java","unix","genai"]
cList = [[10,20,30],[40,50,8]]



Tuple. ( immutable or uneditable or unchangeable )
------
Tuple is defined in ().
Tuple contains set of elements.
Elements can be numbers or strings or Any combination.




Dictionary ( hashmap    map  json  associative array .. )
--------------------------------
Dictionary contains keys and values.
Key would be either number or string used to identify the value
Value can be number or string or list or tuple or dictionary .


Syntax:    object = { key:value , key:value , key:value }
example:     book = {"chap1":10 ,"chap2":20 ,"chap3": 30}
             Data = {1:2,3:4,5:6}
            Bookinfo ={"chap1":["rita","UK"] ,"chap2":["ram","UK"]}



      Index
      -------
   	Chap1	10
	chap2   20
	chap3	30
	chap4   40


Set 
-----
Set is unordered collection of UNIQUE elements of same type.



Operators
----------

arithmetic operators : + - *  / %

logical operators :   and  or  not

relational operators :   <  >  <=  >=  == !=

assignment operators :( ++ and -- are NOT allowed in python)

val = 10
val = val + 1    or  val+=1

special operators :
------------------
in
as
+
*

file handling
--------------

txt  
csv




flat files  ( csv  log conf  json xml prop  .properties )
--------


third party files  ( pdf pptx  docx tar.gz ...)

modes :
r : read mode
w : write mode
a : append mode

opening the file
-------------
fobj = open(filename,mode)


closing the file
-------------
fobj.close()


different ways of reading the file
--------------------------------
1. reading the file line by line
2. fobj.readlines()---> read all the files in the list
3. fobj.read() -------> will return the single string of the file
4. using csv library for csv files, json library for json files
5. using pandas library








frequently used builtin libraries:
------------------------------------


os         : os level activities
math       : mathematical operations
sys        :  sys and python config data
shutil     : copy,move, rmtree  etc
urllib     : read the web, downloading the files
logging    : logging all the events
smtplib    : sending the mails
ftplib     : performing ftp operations
sysconfig  :  sys and python config data
zipfile    : create/extract the zip files
rarfile    : create/extract the rar files
cryptopgraphy : encrypting and decrypting the data or files
tarfile    : create/extract the tar files
filecmp    : comparing files or directories
sqlite3    : python default database
csv        : reading/writing csv files
xml        : reading/writing xml files
calendar   : display month,year calendar info
datetime   : working with date n time
time       : working with date n time
fractions  : working with decimal values
glob       : display all the files
heapq      : more of array operations ( getting largest among list )
subprocess : executing system commands in python (  subprocess.getoutput("ls -ltr")
pdb        : python debugger
platform   : platform information
random     : random operations ( shuffling , random digit ... )
re         : grep + awk + sed
socket     : networking programming
stat       : stats of the file
statistics : basic statistics
telnetlib  : accessing remote servers 






